{"ast":null,"code":"import _classCallCheck from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/src/Seasons/SeasonDisplay.jsx\";\nimport React, { Component } from 'react';\nimport { runInContext } from 'vm';\nimport './SeasondisplyStyle/seasonstyle.css';\nvar seasonConfig = {\n  summer: {\n    text: \"Let's hit the beach!\",\n    iconName: \"sun\"\n  },\n  winter: {\n    text: \"Burr is cold\",\n    iconName: \"snowflake\"\n  },\n  spring: {\n    text: \"flouring\",\n    iconName: \"leaf\"\n  },\n  autumn: {\n    text: \"raining\",\n    iconName: \"rain\"\n  }\n};\n\nvar getSeason = function getSeason(lat, month) {\n  // if(month>2&&month<9){\n  //     return lat>0?'sumer':'winter';\n  // }else{\n  //     return lat>0?'winter':'summer';\n  // }\n  switch (month) {\n    case 0:\n      return lat > 0 ? 'winter' : 'summer';\n      break;\n\n    case 1:\n      return lat > 0 ? 'winter' : 'summer';\n      break;\n\n    case 2:\n      return lat > 0 ? 'spring' : 'autumn';\n      break;\n\n    case 3:\n      return lat > 0 ? 'spring' : 'autumn';\n      break;\n\n    case 4:\n      return lat > 0 ? 'spring' : 'autumn';\n      break;\n\n    case 5:\n      return lat > 0 ? 'summer' : 'winter';\n      break;\n\n    case 6:\n      return lat > 0 ? 'summer' : 'winter';\n      break;\n\n    case 7:\n      return lat > 0 ? 'summer' : 'winter';\n      break;\n\n    case 8:\n      return lat > 0 ? 'autumn' : 'spring';\n      break;\n\n    case 9:\n      return lat > 0 ? 'autumn' : 'spring';\n      break;\n\n    case 10:\n      return lat > 0 ? 'autumn' : 'spring';\n      break;\n\n    case 11:\n      return lat > 0 ? 'winter' : 'summer';\n      break;\n\n    default:\n      console.log('default');\n  }\n}; // const SeasonDisplay =props=>{\n//     const season = getSeason(props.lat,new Date().getMonth());\n//     // const season ='summer';\n//     const {text, iconName}=seasonConfig[season];\n//     return (\n//         <div>\n//             <div className={`season-display ${season}`} >\n//                 <h1> <i className={`left-icon huge ${iconName} icon`}/> </h1>\n//                 <h1><button onClick={addnew} >{text}</button></h1>\n//                 <h1><i className={`right-icon huge ${iconName} icon`} /> </h1>\n//             </div>\n//         </div>\n//     );\n// }\n\n\nvar SeasonDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SeasonDisplay, _Component);\n\n  function SeasonDisplay(props) {\n    var _this;\n\n    _classCallCheck(this, SeasonDisplay);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SeasonDisplay).call(this, props));\n\n    _this.addnew = function (e) {\n      console.log('clicked');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"newss ccomponent\");\n    };\n\n    _this.addnew = _this.addnew().bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SeasonDisplay, [{\n    key: \"render\",\n    value: function render() {\n      var season = getSeason(this.props.lats, new Date().getMonth());\n      var _seasonConfig$season = seasonConfig[season],\n          text = _seasonConfig$season.text,\n          iconName = _seasonConfig$season.iconName;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"season-display \".concat(season),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        className: \"left-icon huge \".concat(iconName, \" icon\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), \" \"), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.addnew,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, text)), this.addnew(), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"right-icon huge \".concat(iconName, \" icon\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), \" \")));\n    }\n  }]);\n\n  return SeasonDisplay;\n}(Component);\n\nexport default SeasonDisplay;","map":{"version":3,"sources":["/Users/yang/Downloads/乳酸菌/react_learning/my-app2/src/Seasons/SeasonDisplay.jsx"],"names":["React","Component","runInContext","seasonConfig","summer","text","iconName","winter","spring","autumn","getSeason","lat","month","console","log","SeasonDisplay","props","addnew","e","bind","season","lats","Date","getMonth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { runInContext } from 'vm';\nimport './SeasondisplyStyle/seasonstyle.css';\n\nconst seasonConfig = {\n    summer:{\n        text:\"Let's hit the beach!\",\n        iconName:\"sun\"\n    },\n    winter:{\n        text:\"Burr is cold\",\n        iconName:\"snowflake\"\n    },\n    spring:{\n        text:\"flouring\",\n        iconName:\"leaf\"\n    },\n    autumn:{\n        text:\"raining\",\n        iconName:\"rain\"\n    }\n\n}\n\nconst getSeason=(lat,month)=>{\n    // if(month>2&&month<9){\n    //     return lat>0?'sumer':'winter';\n\n    // }else{\n    //     return lat>0?'winter':'summer';\n    // }\n    switch(month){\n        case 0:\n            return lat>0?'winter':'summer';\n            break;\n        case 1:\n            return lat>0?'winter':'summer';\n            break;\n        case 2:\n            return lat>0?'spring':'autumn';\n            break;\n        case 3:\n            return lat>0?'spring':'autumn';\n            break;\n        case 4:\n            return lat>0?'spring':'autumn';\n            break;\n        case 5:\n            return lat>0?'summer':'winter';\n            break;\n        case 6:\n            return lat>0?'summer':'winter';\n            break;\n        case 7:\n            return lat>0?'summer':'winter';\n            break;\n        case 8:\n            return lat>0?'autumn':'spring';\n            break;\n        case 9:\n            return lat>0?'autumn':'spring';\n            break;\n        case 10:\n            return lat>0?'autumn':'spring';\n            break;\n\n        case 11:\n            return lat>0?'winter':'summer';\n            break;\n        default:\n            console.log('default');\n    }\n}\n\n\n\n\n\n// const SeasonDisplay =props=>{\n//     const season = getSeason(props.lat,new Date().getMonth());\n//     // const season ='summer';\n//     const {text, iconName}=seasonConfig[season];\n    \n   \n//     return (\n//         <div>\n//             <div className={`season-display ${season}`} >\n//                 <h1> <i className={`left-icon huge ${iconName} icon`}/> </h1>\n//                 <h1><button onClick={addnew} >{text}</button></h1>\n//                 <h1><i className={`right-icon huge ${iconName} icon`} /> </h1>\n//             </div>\n//         </div>\n//     );\n\n\n// }\n\nclass SeasonDisplay extends Component{\n    constructor(props){\n        super(props);\n        this.addnew=this.addnew().bind(this);\n    }\n    addnew = (e) =>{\n        console.log('clicked')\n        return <div>newss ccomponent</div>  \n    }\n    render(){\n        const season = getSeason(this.props.lats,new Date().getMonth());\n        const {text, iconName}=seasonConfig[season]; \n        return (\n            <div>\n                <div className={`season-display ${season}`} >\n                    <h1> <i className={`left-icon huge ${iconName} icon`}/> </h1>\n                    <h1><button onClick={this.addnew} >{text}</button></h1>\n                    {this.addnew()}\n                    <h1><i className={`right-icon huge ${iconName} icon`} /> </h1>\n                </div> \n            </div>\n        );\n    }  \n}\nexport default SeasonDisplay;"]},"metadata":{},"sourceType":"module"}