{"ast":null,"code":"import _classCallCheck from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/src/Seasons/Geolocation.jsx\";\nimport React, { Component } from 'react';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\nimport './SeasondisplyStyle/geolocationStyle.css';\n\nvar Geolocation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Geolocation, _Component);\n\n  function Geolocation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Geolocation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Geolocation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lat: null,\n      langi: null,\n      errorMessage: null\n    };\n    return _this;\n  }\n\n  _createClass(Geolocation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log('1did mount');\n      window.navigator.geolocation.getCurrentPosition(function (position) {\n        _this2.setState({\n          lat: position.coords.latitude\n        });\n\n        _this2.setState({\n          langi: position.coords.longitude\n        });\n      }, function (err) {\n        _this2.setState({\n          errorMessage: err.message\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log('2component did update');\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log('3will mount');\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"renderComponent\",\n    value: function renderComponent() {\n      if (this.state.errorMessage && !this.state.lat && !this.state.langi) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Error:\", this.state.errorMessage));\n      } else if (!this.state.errorMessage && (this.state.lat || this.state.langi)) {\n        return React.createElement(SeasonDisplay, {\n          lats: this.state.lat,\n          langis: this.state.langi,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }) // <div>\n        //     Latitude:{this.state.lat}\n        //     Longitude:{this.state.langi}\n        // </div>\n        ;\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          message: \"PLease accept location request\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(\"h2\", {\n          onClick: this.componentWillUnmount().bind(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"go to video?\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"border red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.renderComponent());\n    }\n  }]);\n\n  return Geolocation;\n}(Component);\n\nexport default Geolocation;","map":{"version":3,"sources":["/Users/yang/Downloads/乳酸菌/react_learning/my-app2/src/Seasons/Geolocation.jsx"],"names":["React","Component","SeasonDisplay","Spinner","Geolocation","state","lat","langi","errorMessage","console","log","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","err","message","clearInterval","interval","componentWillUnmount","bind","renderComponent"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,0CAAP;;IAEMC,W;;;;;;;;;;;;;;;;;UAEFC,K,GAAM;AACFC,MAAAA,GAAG,EAAC,IADF;AAEFC,MAAAA,KAAK,EAAC,IAFJ;AAGFC,MAAAA,YAAY,EAAC;AAHX,K;;;;;;wCAOa;AAAA;;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAC,MAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACI,UAAAC,QAAQ,EAAG;AACP,QAAA,MAAI,CAACC,QAAL,CAAc;AAACV,UAAAA,GAAG,EAACS,QAAQ,CAACE,MAAT,CAAgBC;AAArB,SAAd;;AACA,QAAA,MAAI,CAACF,QAAL,CAAc;AAACT,UAAAA,KAAK,EAACQ,QAAQ,CAACE,MAAT,CAAgBE;AAAvB,SAAd;AACH,OAJL,EAKI,UAAAC,GAAG,EAAE;AACD,QAAA,MAAI,CAACJ,QAAL,CAAc;AAACR,UAAAA,YAAY,EAACY,GAAG,CAACC;AAAlB,SAAd;AACH,OAPL;AASH;;;yCACmB;AAChBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;;;yCAEmB;AAChBD,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;;;2CACsB;AACnBY,MAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACH;;;sCAEgB;AACb,UAAG,KAAKlB,KAAL,CAAWG,YAAX,IAAyB,CAAC,KAAKH,KAAL,CAAWC,GAArC,IAA0C,CAAC,KAAKD,KAAL,CAAWE,KAAzD,EAA+D;AAC3D,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACW,KAAKF,KAAL,CAAWG,YADtB,CADJ,CADJ;AAOH,OARD,MAQM,IAAG,CAAC,KAAKH,KAAL,CAAWG,YAAZ,KAA2B,KAAKH,KAAL,CAAWC,GAAX,IAAgB,KAAKD,KAAL,CAAWE,KAAtD,CAAH,EAAgE;AAClE,eACI,oBAAC,aAAD;AACI,UAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,GADrB;AAEI,UAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,KAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAKI;AACA;AACA;AACA;AARJ;AAUH,OAXK,MAYF;AACA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAC,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAII;AAAI,UAAA,OAAO,EAAE,KAAKiB,oBAAL,GAA4BC,IAA5B,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,CADJ;AAQH;AACJ;;;6BACO;AACJ,aAAO;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF,KAAKC,eAAL,EADE,CAAP;AAGH;;;;EApEqBzB,S;;AAwE1B,eAAeG,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\nimport './SeasondisplyStyle/geolocationStyle.css'\n\nclass Geolocation extends Component{\n   \n    state={\n        lat:null,\n        langi:null,\n        errorMessage:null\n    }\n\n\n    componentDidMount(){\n        console.log('1did mount')\n        window.navigator.geolocation.getCurrentPosition(\n            position =>{\n                this.setState({lat:position.coords.latitude})\n                this.setState({langi:position.coords.longitude})\n            },\n            err=>{\n                this.setState({errorMessage:err.message})\n            }\n        );\n    }\n    componentDidUpdate(){\n        console.log('2component did update')\n    }\n\n    componentWillMount(){\n        console.log('3will mount')\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    renderComponent(){\n        if(this.state.errorMessage&&!this.state.lat&&!this.state.langi){\n            return(\n                <div>\n                    <div>\n                        Error:{this.state.errorMessage}\n                    </div>\n                </div>\n            );\n        }else if(!this.state.errorMessage&&(this.state.lat||this.state.langi)){\n            return(\n                <SeasonDisplay \n                    lats={this.state.lat}\n                    langis={this.state.langi}\n                />\n                // <div>\n                //     Latitude:{this.state.lat}\n                //     Longitude:{this.state.langi}\n                // </div>\n            );\n        }\n        else{\n            return(\n                <div>\n                    <Spinner message=\"PLease accept location request\">\n                        \n                    </Spinner>\n                    <h2 onClick={this.componentWillUnmount().bind()}>go to video?</h2>\n                </div>  \n            );\n        }\n    }\n    render(){\n        return <div className=\"border red\">\n            {this.renderComponent()}\n        </div>\n    }\n\n\n}\nexport default Geolocation;"]},"metadata":{},"sourceType":"module"}