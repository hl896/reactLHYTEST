{"ast":null,"code":"import _classCallCheck from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yang/Downloads/\\u4E73\\u9178\\u83CC/react_learning/my-app2/src/Clock/Clock.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport moment from 'moment';\n\nfunction padZeo(number) {\n  if (number < 10) {\n    return '0' + number;\n  }\n\n  return number;\n}\n\nvar Clock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Clock, _React$Component);\n\n  function Clock() {\n    var _this;\n\n    _classCallCheck(this, Clock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Clock).call(this));\n    _this.state = {\n      time: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(Clock, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log('will mount');\n      clearInterval(this.timeID);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('did mount');\n      this.updateTime();\n    }\n  }, {\n    key: \"updateTime\",\n    value: function updateTime() {\n      var _this2 = this;\n\n      this.timeID = setInterval(function () {\n        _this2.setState({\n          time: new Date()\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var time = this.state.time;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Date:\", moment().format('dddd MMMM Do YYYY, h:mm:ss a')), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"MOnth:\", moment().format('MMMM ')), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"date:\", moment().format('Do')), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Year:\", moment().format('YYYY')), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Current Time:\", this.state.time.toLocaleTimeString()), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"H:\", padZeo(time.getHours())), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"M:\", padZeo(time.getMinutes())), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"S:\", padZeo(time.getSeconds())));\n    }\n  }]);\n\n  return Clock;\n}(React.Component);\n\nexport default Clock;","map":{"version":3,"sources":["/Users/yang/Downloads/乳酸菌/react_learning/my-app2/src/Clock/Clock.jsx"],"names":["React","Component","ReactDOM","moment","padZeo","number","Clock","state","time","Date","console","log","clearInterval","timeID","updateTime","setInterval","setState","format","toLocaleTimeString","getHours","getMinutes","getSeconds"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAsB,WAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAGA,SAASC,MAAT,CAAgBC,MAAhB,EAAuB;AACnB,MAAIA,MAAM,GAAC,EAAX,EAAc;AAEV,WAAO,MAAIA,MAAX;AACH;;AACD,SAAOA,MAAP;AAEH;;IACKC,K;;;;;AAEF,mBAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,KAAL,GAAW;AAEPC,MAAAA,IAAI,EAAC,IAAIC,IAAJ;AAFE,KAAX;AAFS;AAQZ;;;;yCAEmB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAC,MAAAA,aAAa,CAAC,KAAKC,MAAN,CAAb;AAEH;;;wCACkB;AACfH,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,WAAKG,UAAL;AACH;;;iCACW;AAAA;;AACR,WAAKD,MAAL,GAAYE,WAAW,CAAE,YAAI;AAAC,QAAA,MAAI,CAACC,QAAL,CAAc;AAACR,UAAAA,IAAI,EAAC,IAAIC,IAAJ;AAAN,SAAd;AAAiC,OAAxC,EAAyC,IAAzC,CAAvB;AAGH;;;6BAMO;AAAA,UACGD,IADH,GACU,KAAKD,KADf,CACGC,IADH;AAGJ,aAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAUL,MAAM,GAAGc,MAAT,CAAgB,8BAAhB,CAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAWd,MAAM,GAAGc,MAAT,CAAgB,OAAhB,CAAX,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAUd,MAAM,GAAGc,MAAT,CAAgB,IAAhB,CAAV,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAUd,MAAM,GAAGc,MAAT,CAAgB,MAAhB,CAAV,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAkB,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,kBAAhB,EAAlB,CAPJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAOd,MAAM,CAACI,IAAI,CAACW,QAAL,EAAD,CAAb,CATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAOf,MAAM,CAACI,IAAI,CAACY,UAAL,EAAD,CAAb,CAVJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAOhB,MAAM,CAACI,IAAI,CAACa,UAAL,EAAD,CAAb,CAXJ,CAJJ;AAyBH;;;;EA3DerB,KAAK,CAACC,S;;AA+D1B,eAAeK,KAAf","sourcesContent":["import React,{Component} from 'react';\nimport ReactDOM  from 'react-dom';\nimport moment from 'moment';\n\n\nfunction padZeo(number){\n    if (number<10){\n\n        return '0'+number;\n    }\n    return number;\n\n}\nclass Clock extends React.Component{\n\n    constructor(){\n        super();\n        this.state={\n\n            time:new Date(),\n\n        };\n\n    }\n\n    componentWillMount(){\n        console.log('will mount');\n        clearInterval(this.timeID);\n\n    }\n    componentDidMount(){\n        console.log('did mount');\n        this.updateTime();\n    }\n    updateTime(){\n        this.timeID=setInterval( ()=>{this.setState({time:new Date()})},1000\n        );   \n\n    }\n\n    \n\n\n    \n    render(){\n        const {time}= this.state;\n\n        return(\n\n\n\n            <div>\n                <h2>Date:{moment().format('dddd MMMM Do YYYY, h:mm:ss a')}</h2>\n                <h2>MOnth:{moment().format('MMMM ')}</h2>\n                <h2>date:{moment().format('Do')}</h2>\n                <h2>Year:{moment().format('YYYY')}</h2>\n\n              \n                <h2>Current Time:{this.state.time.toLocaleTimeString()}</h2>\n\n                <h2>H:{padZeo(time.getHours())}</h2>\n                <h2>M:{padZeo(time.getMinutes())}</h2>\n                <h2>S:{padZeo(time.getSeconds())}</h2>\n\n                \n            </div>\n            \n\n        );\n\n\n\n    }\n}\n\n\nexport default Clock;"]},"metadata":{},"sourceType":"module"}